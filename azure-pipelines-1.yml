# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger: none

pool:
  vmImage: ubuntu-latest

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
        - task: TerraformInstaller@1
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'

       # - task: AzureCLI@2
       #   inputs:
       #     azureSubscription: 'DevTest'
       #     scriptType: 'bash'
       #     scriptLocation: 'inlineScript'
       #     inlineScript: |
       #      az --version
       #       az account show
        - task: TerraformTaskV4@4
          displayName: tfinit
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'DevTest'
            backendAzureRmResourceGroupName: 'tfstate'
            backendAzureRmStorageAccountName: 'tfstate9802'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'terraform.tfstate'
            
        - task: TerraformTaskV4@4
          displayName: tfvalidate
          inputs:
            provider: 'azurerm'
            command: 'validate'

  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
              
          - task: TerraformTaskV4@4
            displayName: ftinit
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'DevTest'
              backendAzureRmResourceGroupName: 'tfstate'
              backendAzureRmStorageAccountName: 'tfstate9802'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: tfplan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'DevTestSample'
              
          - task: TerraformTaskV4@4
            displayName: tfapply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'DevTestSample'